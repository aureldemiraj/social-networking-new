// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String               @id @default(uuid())
  fullName          String               @db.VarChar(100)
  email             String               @unique
  password          String
  isActive          Boolean              @default(true)
  birthDate         DateTime             @db.Date
  registeredDate    DateTime             @default(now())
  education         String?              @db.VarChar(250)
  passwordChangedAt DateTime?
  role              Role                 @default(USER)
  events            Event[]
  communities       UsersOnCommunities[]
  participantIn     EventParticipants[]
  posts             Post[]

  @@map("users")
}

model Community {
  id          String               @id @default(uuid())
  name        String               @unique
  description String
  createdDate DateTime             @default(now())
  events      Event[]
  users       UsersOnCommunities[]
  posts       Post[]

  @@map("communities")
}

model Event {
  id             String              @id @default(uuid())
  name           String              @db.VarChar(100)
  description    String              @db.VarChar(500)
  location       String
  organizer      User                @relation(fields: [eventOrganizer], references: [id])
  eventOrganizer String
  community      Community           @relation(fields: [communityId], references: [id])
  communityId    String
  eventTime      DateTime
  createdTime    DateTime            @default(now())
  participants   EventParticipants[]

  @@map("events")
}

model UsersOnCommunities {
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  community   Community @relation(fields: [communityId], references: [id])
  communityId String
  joinedAt    DateTime  @default(now())

  @@id(name: "communityUsers", fields: [userId, communityId])
  @@map("users_on_communities")
}

model EventParticipants {
  event         Event  @relation(fields: [eventId], references: [id])
  eventId       String
  participant   User   @relation(fields: [participantId], references: [id])
  participantId String

  @@id([eventId, participantId])
  @@map("event_participants")
}

model Post {
  id          String    @id @default(uuid())
  title       String
  body        String
  author      User      @relation(fields: [authorId], references: [id])
  authorId    String
  community   Community @relation(fields: [communityId], references: [id])
  communityId String

  @@map("posts")
}

enum Role {
  USER
  ADMIN
}
